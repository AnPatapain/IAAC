---

- hosts: web_server_dockers
  become: true
  vars:
    default_container_name: docker
    default_container_image: ubuntu
    default_container_command: /bin/bash -c "apt-get update && apt-get install nano" 
    apache_image : ubuntu/apache2
    database_image: mysql
    apache_container_name: conatiner-apache2
    database_container_name: container-mysql


    docker_volume: data 
    db_name : test
  tasks:
  - name: install aptitude
    apt:
      name: aptitude
      state: latest
      update_cache: true

  - name: install required system packages
    apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
      state: latest
      update_cache: true

  - name: Add Docker GPG apt Key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add Docker Repository
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu focal stable
      state: present

  - name: Update apt and install docker-ce
    apt:
      name: docker-ce
      state: latest
      update_cache: true

  - name: Install Docker Module for Python
    pip:
      name: docker

  # Pulling docker image
  - name: Pull APACHE2
    community.docker.docker_image:
      name: "{{ apache_image }}"
      source: pull

  - name: Pull MYSQL
    community.docker.docker_image:
      name: "{{ database_image }}"
      source: pull

  # Create docker container
  - name: Create APACHE2 containers
    community.docker.docker_container:
      name: "{{ apache_container_name }}"
      image: "{{ apache_image }}"
      ports:
        - "81:80"
      state: started
  
  - name: Create MYSQL containers
    community.docker.docker_container:
      name: "{{ database_container_name }}" 
      image: "{{ database_image }}"
      volumes:
        - "{{ docker_volume }}:/var/lib/mysql:rw"
      env: 
        MYSQL_ROOT_PASSWORD: "123456"
        MYSQL_DATABASE: test
        MYSQL_USER: test
        MYSQL_PASSWORD: "123456"        
      ports:
        - "3360:3360"
      detach: yes
      restart: true

